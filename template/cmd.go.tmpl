// code generated by go generate - look at command.go.tmpl for source file
package shelly

{{ range . }}

{{ $category := .Category }}
{{ $name := .Name }}

/*
 > Command {{ .Category }}.{{ .Name }}
 > {{ .Description }}
*/

// {{ .Category }}{{ .Name }}Request is the request of {{ .Name }}.
type {{ .Category }}{{ .Name }}Request struct {
    {{- range $k , $v := .Request }}
	{{- if eq $v.Type "object" }}
	{{ $k | ToCamel }} {{ $category }}{{ $name }}Request{{ $k | ToCamel }} `json:"{{ $k | ToLower }}{{ if $v.OmitEmpty }},omitempty{{ end }}"`{{ if $v.Description }} // {{ if $v.OmitEmpty }}Optional. {{end}}{{ $v.Description }}{{ end }}
	{{- else }}
    {{ $k | ToCamel }} {{ $v.Type }} `json:"{{ $k | ToLower }}{{ if $v.OmitEmpty }},omitempty{{ end }}"`{{ if $v.Description }} // {{ if $v.OmitEmpty }}Optional. {{end}}{{ $v.Description }}{{- end }}
	{{- end }}
	{{- end }}
}

{{ if .ExtraStructsRequest }}
{{ range $k, $v := .ExtraStructsRequest }}
// {{ $category }}{{ $name }}Request{{ $k | ToCamel }} is the request of {{ $k }}.
type {{ $category }}{{ $name }}Request{{ $k | ToCamel }} struct {
	{{ range $k1, $v1 := $v.Items }}
	{{ $k1 | ToCamel }} {{ $v1.Type }} `json:"{{ $k1 | ToLower }}{{ if $v1.OmitEmpty }},omitempty{{ end }}"`{{ if $v1.Description }} // {{ $v1.Description }}{{ end }}
	{{- end }}
}
{{ end }}
{{ end }}


// {{ .Category }}{{ .Name }}Response is the response of {{ .Name }}.
type {{ .Category }}{{ .Name }}Response struct {
    {{- range $k, $v := .Response }}
	{{- if eq $v.Type "object" }}
	{{ $k | ToCamel }} {{ $category }}{{ $name }}Response{{ $k | ToCamel }} `json:"{{ $k | ToLower }}{{ if $v.OmitEmpty }},omitempty{{ end }}"`{{ if $v.Description }} // {{ if $v.OmitEmpty }}Optional. {{end}}{{ $v.Description }}{{ end }}
	{{- else }}
    {{ $k  | ToCamel}} {{ $v.Type }} `json:"{{ $k | ToLower }}{{ if $v.OmitEmpty }},omitempty{{ end }}"`{{ if $v.Description }} // {{ $v.Description }}{{ end }}
	{{- end }}
	{{- end }}
}

{{ if .ExtraStructsResponse }}
{{ range $k, $v := .ExtraStructsResponse }}
// {{ $category }}{{ $name }}Response{{ $k | ToCamel }} is the response of {{ $k }}.
type {{ $category }}{{ $name }}Response{{ $k | ToCamel }} struct {
	{{ range $k1, $v1 := $v.Items }}
	{{ $k1 | ToCamel }} {{ $v1.Type }} `json:"{{ $k1 | ToLower }}"`{{ if $v1.Description }} // {{ $v1.Description }}{{ end }}
	{{- end }}
}
{{ end }}
{{ end }}

// readResponse reads the response into the given interface.
func (r *{{ .Category }}{{ .Name }}Response) readResponse(reader *responseReader) error { //nolint:dupl
	if reader.Response == nil {
		return ErrInvalidResponse
	}
	return reader.Read(r)
}

// {{ .Name }} {{ .Description }}
func (c {{ .Category }}Client) {{ .Name }}(args {{ .Category }}{{ .Name }}Request) (resp *{{ .Category }}{{ .Name }}Response, err error) { //nolint:dupl
	reader := NewResponseReader()

	if err = c.client.rpc.Call("{{ .Category }}.{{ .Name }}", args, &reader.Response); err != nil {
		return
	}

	resp = &{{ .Category }}{{ .Name }}Response{}
	return resp, resp.readResponse(reader)
}

{{ range $k , $v := .Response }}
// Get{{ $k }} returns the {{ $k }} value.
func (r *{{ $category }}{{ $name }}Response) Get{{ $k | ToCamel }}() {{ if eq $v.Type "object"}}{{ $category }}{{ $name }}Response{{ $k | ToCamel }}{{else}}{{ $v.Type }}{{end}} {
    return r.{{ $k | ToCamel }}
}
{{ end }}

{{ if .ExtraStructsResponse }}
{{ range $k, $v := .ExtraStructsResponse }}
{{ range $k1 , $v1 := $v.Items }}
// Get{{ $k1 }} returns the {{ $k1 }} value.
func (r *{{ $category }}{{ $name }}Response{{ $k | ToCamel }}) Get{{ $k1 | ToCamel }}() {{ $v1.Type }} {
    return r.{{ $k1 | ToCamel }}
}
{{ end }}
{{ end }}
{{ end }}

{{ end }}

